@using DealerManagementSystem.Models
@model IEnumerable<DealerManagementSystem.Models.DmsSecondarySalesOrder>


@{
    ViewBag.Title = "DMS | Order";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    fieldset {
        margin: 10px;
        font-family: sans-serif;
        border: 1px solid #1F497D;
        background: #ddd;
        border-radius: 5px;
        padding: 15px;
        width: 50%;
        float: left;
        position: relative;
    }

        fieldset legend {
            background: #1F497D;
            color: #fff;
            padding: 5px 10px;
            font-size: 12px;
            border-radius: 5px;
            box-shadow: 0 0 0 5px #ddd;
            margin-left: 20px;
            width: 100px;
        }

    #Orders fieldset {
        margin: 10px;
        font-family: sans-serif;
        border: 1px solid #1F497D;
        background: #ddd;
        border-radius: 5px;
        padding: 15px;
        width: 98%;
        float: left;
        position: relative;
    }

    #Orders legend {
        background: #1F497D;
        color: #fff;
        padding: 5px 10px;
        font-size: 12px;
        border-radius: 5px;
        box-shadow: 0 0 0 5px #ddd;
        margin-left: 20px;
        width: 65px;
    }
</style>

<div class="form-group">
    @{
        if (Session["UserType"].ToString() == "Manager")
        {
            <label for="CustomerId">Customer:</label>
                    <select name="order.CustomerId" id="CustomerId">
                        @{
                            if (ViewBag.CustomersList != null)
                            {
                                foreach (var cust in ViewBag.CustomersList)
                                {
                                    <option value="@cust.Id">@cust.Text</option>
                                }
                            }
                        }
                    </select>
                            }
    }
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="card-body d-flex mt-0 pt-0 ml-0 pl-0">
                            <div class="col-md-3 ml-0 pl-0">
                                @Html.Label("From")
                                <div class='input-group date' data-provide="datepicker" id='datepicker'>
                                    <input id="startDate" type='text' class="form-control" required="" placeholder="DD/MM/YYYY" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar">
                                        </span>
                                    </span>
                                </div>
                            </div>

                            <div class="col-md-3">
                                @Html.Label("To")
                                <div class='input-group date' data-provide="datepicker" id='datepicker2'>
                                    <input id="endDate" type='text' required="" placeholder="DD/MM/YYYY" class="form-control" />
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar">
                                        </span>
                                    </span>
                                </div>
                            </div>
                        <div class="col-md-3">
                            <label style="width: 100% !important;color: white;" for="MagId">submit</label>
                            <button type="button" id="btnGetOrders" class="btn btn-success">
                                <span class="glyphicon glyphicon-search"></span> Get Orders
                            </button>
                        </div>
                        <div class="text-danger"><span id="startDateErrorMsg"></span></div>
                        <div class="text-danger"><span id="endDateErrorMsg"></span></div>
    </div>






        <div id="Orders">
            <div class="row">
                <div class="col-auto">
                    <div class="card mb-4">
                        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                            <h6 class="m-0 font-weight-bold text-primary">Orders</h6>
                        </div>
                        <!-- Card Body -->
                        <div class="card-body">
                            <table id="example" class="table-hover table-bordered table-responsive">
                                <thead style="height: 40px;">
                                    <tr>

                                        <th>
                                            @Html.DisplayNameFor(model => model.OrderNo)
                                        </th>

                                        <th>
                                            @Html.DisplayNameFor(model => model.CreateDate)
                                        </th>

                                        <th>
                                            @Html.DisplayNameFor(model => model.Edd)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.CustomerId)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.OrderAmount)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.Status)
                                        </th>
                                        <th>
                                            Manage
                                        </th>
                                    </tr>
                                </thead>

                                <tbody>
                                    @foreach (var aDmsOrder in Model)
                                    {
                                        <tr>

                                            <td>

                                                @Html.DisplayFor(modelItem => aDmsOrder.OrderNo)
                                            </td>

                                            <td>
                                                @{
                                                    string createDate = aDmsOrder.CreateDate.ToString("dd-MMM-yyyy");
                                                }
                                                @Html.DisplayFor(modelItem => createDate)
                                            </td>

                                            <td>
                                                @{
                                                    string edd = aDmsOrder.Edd.ToString("dd-MMM-yyyy");
                                                }
                                                @Html.DisplayFor(modelItem => edd)

                                            </td>


                                            <td>
                                                @Html.DisplayFor(modelItem => aDmsOrder.CustomerId)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => aDmsOrder.OrderAmount)
                                            </td>
                                            <td>
                                                @Enum.GetName(typeof(Dictionary.DMSSecondarySalesOrderStatus), aDmsOrder.Status)
                                            </td>
                                            <td>
                                                <a class="btn btn-primary" href="@Url.Action("EditOrder", "DMSOrder", new { orderId = aDmsOrder.OrderId })">Edit</a>
                                            </td>

                                        </tr>
                                                    }
                                </tbody>
                            </table>

                        </div>
                    </div>
                </div>
            </div>
        </div>

   }
            @*//$('#example tbody').on('click', 'button', function () {
            //    var data = table.row($(this).parents('tr')).data();
            //    alert(data[0] + "'s salary is: " + data[5]);
            //});*@
                @*"columnDefs": [{
                    "targets": -1,
                    "data": null,
                    "defaultContent": "<button>Click!</button>"
                    }]*@
@section scripts
  {

    <script>
        $(document).ready(function () {

           var table = $('#example').dataTable({
                "order": [[0, "desc"]],
                "columns":
            [
                    { "width": "150px" },
                    { "width": "150px" },
                    { className: "dt-body-right", "width": "100px" },
                    { "width": "180px" },
                    null,
                    { "width": "180px" },
                    { className: "dt-body-center", "width": "120px" }
            ],
                'language':
            {
                search: '<div class="input-group"><span class="input-group-addon"><span class="glyphicon glyphicon-search"></span></span>',
                searchPlaceholder:
            'Search'
            }
           });

            $("#example_wrapper").prepend('<a style="position: relative; float: left; left: 10px" class=" btn btn-primary active" href="@Url.Action("MakeOrder", "DMSOrder")"><span class="glyphicon glyphicon-plus-sign"></span> Make Order</a>');
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth(); //January is 0!
            var yyyy = today.getFullYear();

            var mNames = new Array("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec");

            if (dd < 10) {
                dd = '0' + dd;
            }

            //if (mm < 10) {
            //    mm = '0' + mm;
            //}

            today = dd + '-' + mNames[mm] + '-' + yyyy;

            $("#startDate").val(today);
            $("#endDate").val(today);

            $("#startDate").focus(function () {
                $("#startDateErrorMsg").empty();
            });

            $("#endDate").focus(function () {
                $("#endDateErrorMsg").empty();
            });


            $('#btnGetOrders').click(function () {
                var table = $('#example').DataTable();
                table.clear().draw();
                var sStartDate = $("#startDate").val();
                var sEndDate = $("#endDate").val();

                if (sStartDate !== "" && sEndDate !== "") {
                    var jsnFormatData = { sStartDate: sStartDate, sEndDate: sEndDate };
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetOrders", "DMSOrder")',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(jsnFormatData),
                        dataType: "json",
                        success: function (data) {
                            if (data.length === 0) {
                                alert('There is no order from ' + sStartDate + ' to ' + sEndDate);
                            }
                            $.each(data, function (i) {
                                //if (data[i].OrderDay < 10) {
                                //    data[i].OrderDay = '0' + data[i].OrderDay;
                                //}
                                if (data[i].OrderCreateDay < 10) {
                                    data[i].OrderCreateDay = '0' + data[i].OrderCreateDay;
                                }
                                if (data[i].InvoiceDay < 10) {
                                    data[i].InvoiceDay = '0' + data[i].InvoiceDay;
                                }
                                var orderShortMonth = data[i].OrderCreateMonth.substring(0, 3);
                                var invoiceShortMonth = data[i].InvoiceMonth.substring(0, 3);
                                $('#example').DataTable().row.add([
                                    data[i].OrderNo,
                                    data[i].OrderCreateDay + '-' + orderShortMonth + '-' + data[i].OrderCreateCreateYear,
                                    data[i].InvoiceDay + '-' + invoiceShortMonth + '-' + data[i].InvoiceYear,
                                    data[i].CustomerId,
                                    data[i].OrderAmount,
                                    data[i].Status,
                                    '<a class="btn btn-primary" href="@Url.Action("EditOrder", "DMSOrder")?orderId=' + data[i].OrderId + '">Edit</a>'
                                ]).draw();
                            });
                        }

                    });
                } else if (sStartDate === "") {
                    //'<a class="btn btn-success btn-sm" target="_blank" style="padding: 2px; margin-right: 3px;" href="/ReportsPreview/Invoice?invoiceId=' + data[i].InvoiceId + '">Invoice</a>' +
                    //                '<a class="btn btn-info btn-sm " target="_blank" style="padding: 2px; margin-right: 3px;" href="/ReportsPreview/WarrantyCard?invoiceId=' + data[i].InvoiceId + '">Warranty</a>'
                    $("#startDateErrorMsg").text("Please Enter From Date!");
                } else {
                    $("#endDateErrorMsg").text("Please Enter Start Date!");
                }
                return false;
            });

            });
    </script>
}

